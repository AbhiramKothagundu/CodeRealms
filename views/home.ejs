<head>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="/css/home_style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <script href="/public/scripts/transitions.js"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/footer_style.css">

</head>

<body>


    <div style="position: fixed; z-index: -1;">
        <video src="/videos/background.mp4" muted autoplay loop style=""></video>
    </div>

    <div>
        <div class="navBar">
            <div class="logo">
                <img src="/images/logo.png" class="logoMain">

            </div>

            <div class="all_icons">
                <div class="panelICon1"><ion-icon name="newspaper-outline" class="questions"
                        id="questionicon"></ion-icon>
                </div>
                <div class="panel2ICon"><ion-icon name="home-outline" class="home" id="homeicon"></ion-icon></div>
                <div class="panel3Icon">
                    <ion-icon name="person-outline" class="user" id="profileicon" ></ion-icon>
                    <span class="username">
                        <%= username %>
                    </span>
                </div>


            </div>

            <div class="searchAndExit">
                <div class="searchInput">
                    <input type="text" placeholder="Search" class="searchi" id="searchInput">
                </div>
                <!-- <div class="searchImage"><ion-icon name="search-outline" class="search" type="button" value="Join" id="create_realme"></ion-icon></div> -->
                <input type="button" class="searchbit"
                    style="display: flex; background-color: transparent; border-style: none;" value="🔍"
                    id="create_realme">

            </div>
            <div class="Exit">

                <img src="/images/user_profile.png" name="exit-outline" class="exitIcon" id="exitIcon"
                    onclick="wrong"></ion-icon>
                <div class="profileOptions">
                    <ul>
                        <li><a href="/">Logout</a></li>
                        <li><a href="#">Settings</a></li>
                    </ul>
                </div>
            </div>

        </div>


    </div>





    <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
        // Get all the buttons by their IDs
        const btnHome = document.getElementById('homeicon');
        const btnQuestion = document.getElementById('questionicon');
        const btnProfile = document.getElementById('profileicon');

        // Variable to store the previously clicked button
        let prevClickedBtn = null;

        // Function to handle click event
        function onClick(event) {
            // Change text color for clicked element only
            event.target.style.color = 'rgb(255, 255, 255)';
            // Change font size for clicked element only
            event.target.style.fontSize = '20px';
            // Add white bottom border
            event.target.style.borderBottom = '2px solid white';
            event.target.style.borderRadius = '1px';
            event.target.style.transform = 'translateY(0px)'

            // Revert properties of the previously clicked button
            if (prevClickedBtn && prevClickedBtn !== event.target) {
                prevClickedBtn.style.color = '';
                prevClickedBtn.style.fontSize = '';
                prevClickedBtn.style.borderBottom = '';
                prevClickedBtn.style.borderRadius = '';
            }

            // Update the previously clicked button
            prevClickedBtn = event.target;
        }

        // Add click event listeners to each button
        btnHome.addEventListener('click', onClick);
        btnQuestion.addEventListener('click', onClick);
        btnProfile.addEventListener('click', onClick);

        const exitIcon = document.getElementById('exitIcon');
        const description = document.getElementById('description');

        // exitIcon.addEventListener('click', function() {
        //     const confirmLogout = window.confirm("Are you sure you want to log out?");
        //     if (confirmLogout) {
        //         // Perform logout action here
        //         // For now, let's just hide the description
        //         description.style.display = 'none';
        //     }
        // });
        document.getElementById("exitIcon").onclick = function () {
            document.querySelector(".profileOptions").classList.toggle("show");
        }


    </script>


    <div class="main_page_Layout">

        <div class="dropdown-container">


            <div class="cardHeader">
                <div class="cardTitle">$realme_dashboard</div>

                <div class="cardControls">
                    <div class="Control redControl"></div>
                    <div class="Control yellowControl"></div>
                    <div class="Control greenControl"></div>
                </div>
            </div>

            <link href='https://fonts.googleapis.com/css?family=Varela' rel='stylesheet' type='text/css'>

            <!-- <div class="glitch">Realme Dashboard</div>  -->

            <br>
            <br>

            <div class="realme_container">
                <% dropdownsHTML.forEach((dropdownHTML, index)=> { %>
                    <%- dropdownHTML %>
                        <% }) %>
            </div>



        </div>

        <div class="right_section">
            <div class="right_upper" style="padding: 10px;">
                Event Calendar

                <br>
                <br>

                <div class="event_calendar_Section" style="padding: 10px 0 10px 10px;">
                    <div class="scrollable_event">
                        <div class="event-container">
                            <h3 class="year">2024</h3>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">20</div>
                                        <div class="month">Jun</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">GDSC</h3>

                                    <div class="event-description">
                                        GameJam_2024 by Alexandra
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:00 am
                                    </div>
                                </div>
                            </div>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">10</div>
                                        <div class="month">Aug</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">GDSC</h3>

                                    <div class="event-description">
                                        JavaScript_Bootcamp by Michael
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:45 am
                                    </div>
                                </div>
                            </div>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">2</div>
                                        <div class="month">Mar</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">GDSC</h3>

                                    <div class="event-description">
                                        MachineLearning_Bootcamp by Sophie Turner
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:00 am
                                    </div>
                                </div>
                            </div>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">15</div>
                                        <div class="month">Sep</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">Be_Cool_Event_2024</h3>

                                    <div class="event-description">
                                        Be Cool Event 2024 by John Doe
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:45 am
                                    </div>
                                </div>
                            </div>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">8</div>
                                        <div class="month">Nov</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">Learning_Mistakes_Event_2024</h3>

                                    <div class="event-description">
                                        Learning Mistakes Event 2024 by Emma Smith
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:00 am
                                    </div>
                                </div>
                            </div>

                            <div class="event">
                                <div class="event-left">
                                    <div class="event-date">
                                        <div class="date">23</div>
                                        <div class="month">Jul</div>
                                    </div>
                                </div>

                                <div class="event-right">
                                    <h3 class="event-title">Hours_Brain_Again_Event_2024</h3>

                                    <div class="event-description">
                                        Hours Brain Again Event 2024 by Daniel Brown
                                    </div>

                                    <div class="event-timing">
                                        <img src="images/time.png" alt="" /> 10:30 am
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </div>


            </div>
            <div class="right_lower">
                Trending Realme's
                <br>
                <br>
                <div class="scrollerx" data-speed="fast" style="padding: 10px;">
                    <ul class="tag-list scroller__inner">
                        <li>
                            <div class="inner2"> HTML</div>
                            <button class="joins">JOIN</button>
                        </li>
                        <li>
                            <div class="inner2"> CSS</div>
                            <button class="joins">JOIN</button>
                        </li>
                        <li>
                            <div class="inner2">JS</div>
                            <button class="joins">JOIN</button>
                        </li>
                        <li>
                            <div class="inner2">SSG</div>
                            <button class="joins">JOIN</button>
                        </li>
                        <li>
                            <div class="inner2">webdev</div>
                            <button class="joins">JOIN</button>
                        </li>

                    </ul>

                </div>
            </div>
        </div>

    </div>




    <footer>
        <div class="background">
          <svg
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            x="0px"
            y="0px"
            width="100%"
            height="100%"
            viewBox="0 0 1600 900"
          >
            <defs>
              <path
                id="wave"
                fill="rgba(105, 27, 252, 0.6)"
                d="M-363.852,502.589c0,0,236.988-41.997,505.475,0
        s371.981,38.998,575.971,0s293.985-39.278,505.474,5.859s493.475,48.368,716.963-4.995v560.106H-363.852V502.589z"
              />
            </defs>
            <g>
              <use xlink:href="#wave" opacity=".4">
                <animateTransform
                  attributeName="transform"
                  attributeType="XML"
                  type="translate"
                  dur="8s"
                  calcMode="spline"
                  values="270 230; -334 180; 270 230"
                  keyTimes="0; .5; 1"
                  keySplines="0.42, 0, 0.58, 1.0;0.42, 0, 0.58, 1.0"
                  repeatCount="indefinite"
                />
              </use>
              <use xlink:href="#wave" opacity=".6">
                <animateTransform
                  attributeName="transform"
                  attributeType="XML"
                  type="translate"
                  dur="6s"
                  calcMode="spline"
                  values="-270 230;243 220;-270 230"
                  keyTimes="0; .6; 1"
                  keySplines="0.42, 0, 0.58, 1.0;0.42, 0, 0.58, 1.0"
                  repeatCount="indefinite"
                />
              </use>
              <use xlink:href="#wave" opacty=".9">
                <animateTransform
                  attributeName="transform"
                  attributeType="XML"
                  type="translate"
                  dur="4s"
                  calcMode="spline"
                  values="0 230;-140 200;0 230"
                  keyTimes="0; .4; 1"
                  keySplines="0.42, 0, 0.58, 1.0;0.42, 0, 0.58, 1.0"
                  repeatCount="indefinite"
                />
              </use>
            </g>
          </svg>
        </div>
        <section>
          <ul class="socials">
            <li><a class="fa-brands fa-x-twitter"></a></li>
            <li><a class="fa-brands fa-facebook"></a></li>
            <li><a class="fa-brands fa-linkedin"></a></li>
          </ul>
          <ul class="links">
            <li><a>Home</a></li>
            <li><a>About</a></li>
            <li><a>Portfolio</a></li>
            <li><a>Skillset</a></li>
            <li><a>Hire</a></li>
          </ul>
          <p class="legal">© 2024 All rights reserved - code realms a project by <a href="#">team zenith</a></p>
        </section>
      </footer>



    <script>


        document.addEventListener('DOMContentLoaded', function () {


            const dropdowns = document.querySelectorAll('.dropdown');
            const dropdownContainer = document.querySelector('.dropdown-container');

            dropdowns.forEach(function (dropdown, index) {
                const dropdownContent = dropdown.querySelector('.dropdown-content');
                const originalTop = dropdownContainer.getBoundingClientRect().top - 10;

                dropdown.addEventListener('mouseenter', function () {
                    const dropdownHeight = dropdownContent.offsetHeight;
                    const dropdownTop = originalTop + dropdown.getBoundingClientRect().height - 2;

                    // Calculate the total height of open dropdowns
                    let totalDropdownHeight = dropdownHeight - 10;
                    dropdowns.forEach(function (otherDropdown, otherIndex) {
                        if (otherIndex > index && otherDropdown.classList.contains('show')) {
                            totalDropdownHeight += otherDropdown.querySelector('.dropdown-content').offsetHeight - 80;
                        }
                    });

                    // Adjust positions of subsequent dropdowns
                    dropdowns.forEach(function (otherDropdown, otherIndex) {
                        if (otherIndex > index) {
                            const otherDropdownTop = otherDropdown.getBoundingClientRect().top - dropdownContainer.getBoundingClientRect().top - 200;
                            if (dropdownTop + totalDropdownHeight > otherDropdownTop) {
                                otherDropdown.style.top = (dropdownTop + totalDropdownHeight) - 90 + 'px';
                                totalDropdownHeight += otherDropdown.querySelector('.dropdown-content').offsetHeight;
                            } else {
                                otherDropdown.style.top = '0'; // Reset top if no longer overlapping
                            }
                        }
                    });
                });

                dropdown.addEventListener('mouseleave', function () {
                    // Reset top for all subsequent dropdowns
                    dropdowns.forEach(function (otherDropdown, otherIndex) {
                        if (otherIndex > index) {
                            otherDropdown.style.top = '0'; // Reset top for all subsequent dropdowns
                        }
                    });
                });
            });
        });



        const scrollers = document.querySelectorAll(".scrollerx");

        // If a user hasn't opted in for reduced motion, then we add the animation
        if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
            addAnimation();
        }

        function addAnimation() {
            scrollers.forEach((scroller) => {
                // add data-animated="true" to every `.scroller` on the page
                scroller.setAttribute("data-animated", true);

                // Make an array from the elements within `.scroller-inner`
                const scrollerInner = scroller.querySelector(".scroller__inner");
                const scrollerContent = Array.from(scrollerInner.children);

                // For each item in the array, clone it
                // add aria-hidden to it
                // add it into the `.scroller-inner`
                scrollerContent.forEach((item) => {
                    const duplicatedItem = item.cloneNode(true);
                    duplicatedItem.setAttribute("aria-hidden", true);
                    scrollerInner.appendChild(duplicatedItem);
                });
            });
        }

        const searchInput = document.getElementById('searchInput');

        // Add event listener for key press
        searchInput.addEventListener('keypress', function (event) {
            // Check if Enter key is pressed
            if (event.key === 'Enter') {
                // Get the value from the search input
                const searchTerm = searchInput.value;
                // Redirect to the realm_search page with the search term as a query parameter
                window.location.href = `/realm_search?q=${searchTerm}`;
            }
        });


    </script>







</body>